name: Process Core Dumps

on:
  push:

jobs:
  process-core-dumps:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v2 
        with:
          ref: be2cabce327b58a549500bbeb3a342530f2573e9

      - name: Install dependencies
        run: | 
          sudo apt-get update
          sudo apt-get install -y nasm yasm
          
      - name: Build repository 
        run: | 
          ./configure --enable-shared --disable-static
          make -j$(nproc) 
      
      - name: Install Chap dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake  # Install cmake for building chap

      - name: Clone chap repository and build
        run: |
          git clone https://github.com/vmware/chap.git >> /tmp/chap
          pushd /tmp/chap
          git submodule update --init --recursive
          mkdir build-chap
          cd build-chap
          cmake ../
          make
          popd

      - name: Process core dumps with chap
        run: |
          set +e
          
          directory="$GITHUB_WORKSPACE"
          ulimit -c unlimited
          
          find "$directory" -name "*.so" -exec sh -c '
              for so_file do
                  "$so_file"
              done
          ' sh {} +
          
          commands=("count" "describe" "dump" "enumerate" "explain" "list" "show" "summarize")
          sub_commands=("allocations" "anchored" "anchorpoints" "externalanchored" "externalanchorpoints" "free" "inaccessible" "leaked" "readonly" "registeranchored" "registeranchorpoints" "rxonly" "stackanchorpoints" "s")
          
          for core_file in /var/lib/apport/coredump/*; do
              if [ -f "$core_file" ]; then
                  for command in "${commands[@]}"; do
                      for sub_command in "${sub_commands[@]}"; do
                          /tmp/chap/build-chap/chap "$core_file" <<EOF
                          $command $sub_command
          EOF
                      done
                  done
              fi
          done

